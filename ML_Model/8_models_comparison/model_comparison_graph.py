import numpy as np
import matplotlib.pyplot as plt

min_readtot=  [8828, 5897, 4365, 3350, 2610, 2031, 1574, 1201, 892, 633, 422, 243, 93, 2]
amount_of_data_points= [10000, 20000, 30000, 40000, 50000, 60000, 70000, 80000, 90000, 100000, 110000, 120000, 130000, 140000]

x_labels = [f"{amount}\n({min_read}) " for amount, min_read in zip(amount_of_data_points, min_readtot)]

#pearson corr
pc_bins_116_weights =[0.4602514176599915, 0.48575177035585493, 0.4681892910145096, 0.43012322876778525, 0.43162351480285577, 0.3956456398938929, 0.3834285583999911, 0.3675688237236956, 0.35229361167527956, 0.3098910920312947, 0.27487230984447636, 0.2533283086204655, 0.22619109627542386, 0.14903548051086124]
pc_bins_116 = [0.5111414017029681, 0.47304788424747707, 0.44919541751402425, 0.4438005321734082, 0.4086227044815026, 0.41387467300921066, 0.3873168767666795, 0.3403157781687327, 0.3529434585451168, 0.3119749507350106, 0.2710591171895744, 0.20275669257417217, 0.13342904460138644, 0.1146692896192811]
pc_bins_101_weights= [0.4810928619973071, 0.46345552354473146, 0.43133134561477005, 0.41509171887344937, 0.4122113917109905, 0.41375495908813464, 0.38172840931072904, 0.3507030785283586, 0.345245590167751, 0.33580022336077603, 0.2721772598398162, 0.2132322298561095, 0.19556018076647064, 0.11421283832863374]
pc_bins_101= [0.4698618127430811, 0.44556532889148615, 0.43168336723503087, 0.40942599248971795, 0.4093371474044227, 0.40189458395948285, 0.38371919398777177, 0.36463507240711546, 0.3273031824548345, 0.29761628156353276, 0.23182988392197032, 0.19080114951303506, 0.16588549927268215, 0.15752803608520372]
pc_meanfl_116 = [0.5119593203533586, 0.4786294900802779, 0.46188771586975785, 0.445985115607327, 0.430255528531145, 0.41498975500833934, 0.38778576731977354, 0.3674604846338074, 0.3454934121920552, 0.2823137407577372, 0.2465728143416927, 0.15887643496681725, 0.11978525038006936, 0.10119427937535816]
pc_meanfl_116_weights = [0.5194121527084489, 0.4790951075490957, 0.47046013714773766, 0.4486956174819198, 0.44430753905506515, 0.42704559162657374, 0.3884357262395164, 0.37534505345385205, 0.32043286690455164, 0.28644732756465385, 0.264786415394044, 0.21081379982566606, 0.13997492783545204, 0.14725831667218225]
pc_meanfl_101_weights= [0.4878531720184814, 0.45713505374865004, 0.4523348710665005, 0.43185792341360063, 0.4193601809243762, 0.4031233298670243, 0.39554354653427803, 0.3596212444410553, 0.3168193124414892, 0.28937950123424183, 0.2343336363229529, 0.18244594939964276, 0.1432450341895902, 0.16116445753334127]
pc_meanfl_101= [0.47557333170543126, 0.4550929827465586, 0.44511916328752565, 0.4391442863694943, 0.425649836887109, 0.408189497885272, 0.37938593557273603, 0.3669473050032063, 0.32507409834075085, 0.29102455406547967, 0.2278129740182844, 0.16599072779785334, 0.12932003356266364, 0.07718916401372392]

fig= plt.figure(figsize=(16, 12))
fig.subplots_adjust(top=0.95, left=0.17, right=0.9, bottom=0.19)

# Plot the lines with different colors
plt.plot(amount_of_data_points, pc_meanfl_116_weights, 'g.-', label="Mean FL, 116bp sequence, with sample weights model fit")
plt.plot(amount_of_data_points, pc_meanfl_116, 'b.-', label="Mean FL, 116bp sequence")
plt.plot(amount_of_data_points, pc_meanfl_101_weights, 'r.-', label="Mean FL, 101bp sequence, with sample weights model fit")
plt.plot(amount_of_data_points, pc_meanfl_101, 'c.-', label="Mean FL, 101bp sequence")
plt.plot(amount_of_data_points, pc_bins_116_weights, 'y.-', label="4 bins, 116bp sequence, with sample weights model fit")
plt.plot(amount_of_data_points, pc_bins_116, 'm.-', label="4 bins, 116bp sequence")
plt.plot(amount_of_data_points, pc_bins_101_weights, 'k.-', label="4 bins, 101bp sequence, with sample weights model fit")
plt.plot(amount_of_data_points, pc_bins_101, 'orange', label="4 bins, 101bp sequence")

plt.xticks(np.array(amount_of_data_points)+2000, x_labels, fontsize=18, rotation=45, ha='right')
plt.yticks(np.arange(0.1, 0.55, step=0.05), fontsize=20)
plt.xlabel("#Variants in the training set \n (Total read cut-off)", fontsize=24)
plt.ylabel("Pearson correlation", fontsize=24)

# Set legend with custom placement and font size
legend = plt.legend(loc='lower left', fontsize=18)
legend.set_title("Legend", prop={"size": 18})
legend.get_frame().set_facecolor('white')

plt.savefig('figure_3b.png', dpi=300)
plt.show()



