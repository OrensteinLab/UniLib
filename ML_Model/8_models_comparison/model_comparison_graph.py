import numpy as np
import matplotlib.pyplot as plt

min_readtot=[8676, 5752, 4220, 3214, 2477, 1906, 1457, 1090, 784, 536, 331, 161, 18, 1]
amount_of_data_points= [10000, 20000, 30000, 40000, 50000, 60000, 70000, 80000, 90000, 100000, 110000, 120000, 130000, 140000]

x_labels = [f"{amount}\n({min_read}) " for amount, min_read in zip(amount_of_data_points, min_readtot)]

#pearson corr
pc_bins_116_weights =[0.3339029065731615, 0.3607375772180308, 0.3652441700545955, 0.37160963403400593, 0.37381467502179644, 0.36695361334379756, 0.3497510842745697, 0.33328336628137917, 0.32392923941325047, 0.2920836626228269, 0.2645506442702593, 0.23761959179335407, 0.2288118625669221, 0.18460427039114433]
pc_bins_116 = [0.3276252872021509, 0.3751969627991971, 0.3581586635461276, 0.3445757469365204, 0.3610998100960156, 0.36023852168673254, 0.34496682485279884, 0.33057132622430196, 0.32482517392105437, 0.2844588413143381, 0.2539351030976027, 0.2016210536369446, 0.15883991091364233, 0.18039117694515944]
pc_bins_101_weights= [0.33499837162751894, 0.3369710868412677, 0.36349676743199794, 0.32264389607447463, 0.37032020102169994, 0.3520385487500629, 0.34623266589069923, 0.3298607450561626, 0.3128233528914975, 0.28416505866530084, 0.2616499528773756, 0.22021791236671823, 0.181764125367868, 0.18098114427701384]
pc_bins_101= [0.3034315452554218, 0.3740217223533865, 0.35758113903794886, 0.3633512419928263, 0.34783348094222144, 0.3571046643211893, 0.3497705621064247, 0.32977970127757994, 0.30070018715625046, 0.2913759937035051, 0.26567552099763214, 0.20624357928769788, 0.1332507207030546, 0.2038755382367694]
pc_meanfl_116 = [0.36440836576433355, 0.39398456657792624, 0.4130069843465015, 0.414437999558831, 0.38745150181533305, 0.3897424818888142, 0.37368318664275074, 0.35747321300179724, 0.31202162728070454, 0.28685039183758787, 0.20996063862709421, 0.18739721415566152, 0.13091987764096163, 0.14211303898409589]
pc_meanfl_116_weights =[0.3714248331440048, 0.4361013704749662, 0.4101605209177933, 0.4057721653144361, 0.40431682612304304, 0.40008396291044274, 0.3670179741717371, 0.3409022770571758, 0.3231895871062215, 0.28414841824855896, 0.24653301421883156, 0.2218697791671367, 0.18363515982398146, 0.17362871506829075]
pc_meanfl_101_weights= [0.3822884730617331, 0.3851306977407354, 0.3955552603750252, 0.397363247367597, 0.3881505457773462, 0.36768702217926813, 0.3576820637128813, 0.3442712130831394, 0.31749229404455515, 0.25433202040303515, 0.24089554143808822, 0.18773658117647873, 0.1679914726606391, 0.19177077859071145]
pc_meanfl_101= [0.3819025784969411, 0.3998376503378003, 0.3677612342232094, 0.39584524471479493, 0.38438892121574303, 0.3801885509817392, 0.3541924695336614, 0.3356151504076351, 0.3159077307168915, 0.2757012719964427, 0.2312351000499342, 0.16890742790108124, 0.12781318543392126, 0.15631396553414453]

fig= plt.figure(figsize=(16, 12))
fig.subplots_adjust(top=0.95, left=0.1, right=0.9, bottom=0.18)

# Plot the lines with different colors
plt.plot(amount_of_data_points, pc_meanfl_116_weights, 'g.-', label="meanFL,116 seq (with barcode), with sample weights model fit")
plt.plot(amount_of_data_points, pc_meanfl_116, 'b.-', label="meanFL,116 seq (with barcode)")
plt.plot(amount_of_data_points, pc_meanfl_101_weights, 'r.-', label="meanFL,101 seq (without barcode), with sample weights model fit")
plt.plot(amount_of_data_points, pc_meanfl_101, 'c.-', label="meanFL,101 seq (without barcode)")
plt.plot(amount_of_data_points, pc_bins_116_weights, 'y.-', label="4 bins,116 seq (with barcode), with sample weights model fit")
plt.plot(amount_of_data_points, pc_bins_116, 'm.-', label="4 bins,116 seq (with barcode)")
plt.plot(amount_of_data_points, pc_bins_101_weights, 'k.-', label="4 bins,101 seq (without barcode), with sample weights model fit")
plt.plot(amount_of_data_points, pc_bins_101, 'orange', label="4 bins,101 seq (without barcode)")

plt.xticks(amount_of_data_points, x_labels, fontsize=16, rotation=45, ha='right')
plt.yticks(np.arange(0, 0.5, step=0.05), fontsize=16)
plt.xlabel("# Variant in the training set \n (Total read cutoff)", fontsize=25)
plt.ylabel("Pearson correlation", fontsize=25)

# Set legend with custom placement and font size
legend = plt.legend(loc='lower left', fontsize=18)
legend.set_title("Legend", prop={"size": 18})

plt.savefig('models_comp_graph.png', dpi=300)
plt.show()



