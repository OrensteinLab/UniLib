import numpy as np
import matplotlib.pyplot as plt


amount_of_data_points= [10000, 20000, 30000, 40000, 50000, 60000, 70000, 80000, 90000, 100000, 110000, 120000, 130000, 140000]
min_readtot = [8957, 6009, 4447, 3418, 2671, 2084, 1623, 1245, 934, 670, 454, 271, 119, 4]


#log meanFL labels prediction
log_meanfl_116 = [0.4488152617954766, 0.45300675089171605, 0.45282120641826495, 0.4251091110823297, 0.4445411538930527, 0.4328226828202526, 0.4148957506091534, 0.3872302138329518, 0.35677994667446666, 0.34938272474808474, 0.32369349677406123, 0.2697107896872501, 0.20997866572013785, 0.2110503160424364]
log_meanfl_116_weights = [0.443418565895802, 0.45701605715888816, 0.4580647089605019, 0.4465357432616376, 0.4454201927998763, 0.4286502899808109, 0.42220938468353264, 0.41360985810694634, 0.3850384787806399, 0.33091185420952873, 0.33444846599012934, 0.2908330196159247, 0.25564675953164606, 0.3002268415958914]

#pearson corr log
log_pc_bins_116_weights =[0.43900076716425607, 0.44643746981647603, 0.44899249113909984, None, 0.40661168429301264, 0.400486784086635, None, 0.36793402703704414, 0.36135754086400795, 0.3287757692894872, 0.31264886379707846, 0.254120013233437, 0.1953262740307708, 0.11437459442421824]
log_pc_bins_116 = [0.4358032093151015, 0.4547533322705739, None, None, 0.40829684504964675, 0.41011862723353865, 0.3743890729896613, 0.3642197544685713, 0.35731018727019, 0.3282345423955814, 0.3094245526090286, 0.20799973688410134, 0.11931043808205313, 0.1482309109156145]
log_pc_meanfl_116 = [0.4550943879888908, 0.4670954896206748, 0.46011826725755156, 0.44373577038085377, 0.42153268289728946, 0.4216382047080302, 0.3969782710552274, 0.36705668990984086, 0.3488370353725618, 0.28592078023700424, 0.24337765514927698, 0.17128629637434636, 0.1110269265444366, 0.10155213331517621]# amount_of_data_points = [10000, 20000, 30000, 40000, 50000, 60000, 70000, 80000, 90000, 100000, 110000, 120000, 130000, 140000]
log_pc_meanfl_116_weights = [0.45697452595023813, 0.462806398634125, 0.4569781717177102, 0.4416890560035466, 0.4321911743308702, 0.42000606590664213, 0.3920829759947355, 0.3895233798856745, 0.346541394574358, 0.2938942310328697, 0.25417714554222176, 0.21863640240227677, 0.1825572558582499, 0.16313357297392828]# amount_of_data_points = [10000, 20000, 30000, 40000, 50000, 60000, 70000, 80000, 90000, 100000, 110000, 120000, 130000, 140000]




# print(len(pearson_corr), len(amount_of_data_points), len(k_fold_pearson_std))
#
# for item in min_readtot:
#     print(item, end=")      (")
fig= plt.figure(figsize=(16, 12), dpi=300)

plt.plot(amount_of_data_points, log_pc_meanfl_116, 'b.-',label="log after predicition,meanFL,116 seq (with barcode)")
plt.plot(amount_of_data_points, log_pc_meanfl_116_weights, 'g.-', label="log after predicition,meanFL,116 seq (with barcode),with sample weights model fit")
plt.plot(amount_of_data_points, log_pc_bins_116, 'k.-', label="log after predicition, 4 bins,116 seq (with barcode)")
plt.plot(amount_of_data_points, log_pc_bins_116_weights, 'r.-', label="log after predicition, 4 bins,116 seq (with barcode), with sample weights model fit")
plt.plot(amount_of_data_points, log_meanfl_116_weights, 'c.-',label="log meanFL label,116 seq (with barcode), with sample weights model fit")
plt.plot(amount_of_data_points, log_meanfl_116, 'y.-', label="log meanFL label, 116 seq (with barcode)")

plt.xticks(amount_of_data_points)
plt.yticks(np.arange(0, 0.5, step=0.05))
plt.ylabel("pearson correlation", fontsize=14)
plt.title("models comparison: 4 bins/meanFL, log after prediction/log on label , with/without sample_weights model fit")

# plt.xlabel("\n\namount of 116 sequences data points (minimum readtot of the data points)", fontsize=14)
plt.legend()
plt.show()
plt.savefig('models_comp_log.png',dpi=300)