import numpy as np
import matplotlib.pyplot as plt

min_readtot=  [8126, 5615, 4208, 3252, 2544, 1988, 1543, 1180, 876, 623, 415, 239, 91, 2]
amount_of_data_points= [10000, 20000, 30000, 40000, 50000, 60000, 70000, 80000, 90000, 100000, 110000, 120000, 130000, 140000]

x_labels = [f"{amount}\n({min_read}) " for amount, min_read in zip(amount_of_data_points, min_readtot)]

#pearson corr
pc_bins_116_weights = [0.45367078302486935, 0.45562592819727943, 0.44585261384298613, 0.4371468159872771, 0.42669727659214374, 0.40956707535550274, 0.37362464871524964, 0.36605572589744606, 0.3346140649207038, 0.2980564500627438, 0.24458833409812264, 0.13335032176239983, 0.11650869021506119, 0.13846184099931758]
pc_bins_116 = [0.4457340818853601, 0.4464995959346768, 0.45807053616744065, 0.4435766838170358, 0.43372207815431824, 0.4070265192207984, 0.37437468586630057, 0.3515329362889224, 0.33412686950596626, 0.27983784256559585, 0.2559621960206224, 0.16957789459390532, 0.06537280236032064, 0.13843160813760919]
pc_bins_101_weights= [0.4538194667968703, 0.4533344086411933, 0.4364274282211714, 0.43001909300639607, 0.424141211481886, 0.39093335667393275, 0.3684577067524464, 0.34080226354940385, 0.3152443035033661, 0.29490885658138416, 0.2508655632063219, 0.19096338674114924, 0.10638453463952548, 0.11147025644165706]
pc_bins_101=  [0.4424233986217826, 0.44806968446329154, 0.45093294362545494, 0.43542036214849095, 0.4258871411414404, 0.39864182665169773, 0.3903561199209349, 0.36054324410993155, 0.33407245190922463, 0.28014097032975194, 0.23457595619777857, 0.15592126806609735, 0.1626319306265307, 0.09065393934674568]
pc_meanfl_116 = [0.4520128250891838, 0.4567757048235781, 0.44178903272195835, 0.4292306651540947, 0.4100090428188615, 0.406043024237803, 0.37128680059952773, 0.36357700778455904, 0.3330210047709571, 0.2866923085328827, 0.20187884545342052, 0.17173313708928561, 0.1460525128225057, 0.08602989026268346]
pc_meanfl_116_weights = [0.45480783787498313, 0.44995987659299297, 0.446842193565598, 0.4290587837125165, 0.40941314975568915, 0.397188905482024, 0.37719153598573, 0.3563826131717963, 0.32248148031447554, 0.3006308492665175, 0.2571126312914134, 0.20341819692451155, 0.16566571006387903, 0.1551660181561735]
pc_meanfl_101_weights= [0.44244735948623803, 0.45674254166709854, 0.44682915998280587, 0.4349612894141887, 0.41569817206903126, 0.3943559375041974, 0.3894745451598324, 0.3532920378675257, 0.32078121281894, 0.2747208017660753, 0.25917727912673444, 0.19963288366919507, 0.1924598462936407, 0.18898196202318418]
pc_meanfl_101= [0.4535018085589726, 0.44911801790008943, 0.44386786894623503, 0.42826101076458234, 0.4076388739980994, 0.38537744797945517, 0.3748949901852815, 0.36630682594191466, 0.34105740245316407, 0.2970708361230554, 0.2566511045222021, 0.18334768407300278, 0.15596266040046347, 0.13702004362054604]

fig= plt.figure(figsize=(16, 12))
fig.subplots_adjust(top=0.95, left=0.17, right=0.9, bottom=0.19)

# Plot the lines with different colors
plt.plot(amount_of_data_points, pc_meanfl_116_weights, 'g.-', label="Mean FL, 116bp sequence, with sample weights model fit")
plt.plot(amount_of_data_points, pc_meanfl_116, 'b.-', label="Mean FL, 116bp sequence")
plt.plot(amount_of_data_points, pc_meanfl_101_weights, 'r.-', label="Mean FL, 101bp sequence, with sample weights model fit")
plt.plot(amount_of_data_points, pc_meanfl_101, 'c.-', label="Mean FL, 101bp sequence")
plt.plot(amount_of_data_points, pc_bins_116_weights, 'y.-', label="4 bins, 116bp sequence, with sample weights model fit")
plt.plot(amount_of_data_points, pc_bins_116, 'm.-', label="4 bins, 116bp sequence")
plt.plot(amount_of_data_points, pc_bins_101_weights, 'k.-', label="4 bins, 101bp sequence, with sample weights model fit")
plt.plot(amount_of_data_points, pc_bins_101, 'orange', label="4 bins, 101bp sequence")

plt.xticks(np.array(amount_of_data_points)+2000, x_labels, fontsize=18, rotation=45, ha='right')
plt.yticks(np.arange(0.1, 0.55, step=0.05), fontsize=20)
plt.xlabel("#Variants in the training set \n (Total read cut-off)", fontsize=24)
plt.ylabel("Pearson correlation", fontsize=24)

# Set legend with custom placement and font size
legend = plt.legend(loc='lower left', fontsize=18.5)
legend.get_frame().set_facecolor('white')

plt.savefig('figure_3b.png', dpi=300)
plt.show()



