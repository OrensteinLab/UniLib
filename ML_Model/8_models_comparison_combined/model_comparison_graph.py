import numpy as np
import matplotlib.pyplot as plt

min_readtot= [8957, 6009, 4447, 3418, 2671, 2084, 1623, 1245, 934, 670, 454, 271, 119, 4]
amount_of_data_points= [10000, 20000, 30000, 40000, 50000, 60000, 70000, 80000, 90000, 100000, 110000, 120000, 130000, 140000]

x_labels = [f"{amount}\n({min_read}) " for amount, min_read in zip(amount_of_data_points, min_readtot)]

#pearson corr
pc_bins_116_weights =[0.43507816849779246, 0.4453859064097939, 0.4374368618558182, 0.43650452490267166, 0.4211596268178909, 0.421885923039513, 0.4120663613124239, 0.38298336414067125, 0.33982895526383383, 0.3135338351965615, 0.2806569836950911, 0.15476607583445093, 0.10505758554089245, 0.12740802817819305]
pc_bins_116 = [0.4424107199142623, 0.44251898705182413, 0.4548260953620163, 0.45160915861943274, 0.4359962985029497, 0.42428208679620305, 0.40184697986395024, 0.36571213492882615, 0.3492625939419689, 0.32106236519516235, 0.2666749455737555, 0.1922314925228065, 0.07483552280530083, 0.12586035722187794]
pc_bins_101_weights= [0.4409848539130674, 0.43879583710371384, 0.4346997044504044, 0.41356437945827285, 0.43322051066898665, 0.4164115071961262, 0.3914336564945947, 0.3802224220924458, 0.3348982605433279, 0.33017964531925614, 0.2621904802287956, 0.2153870155248287, 0.10525545354750306, 0.1276142379868817]
pc_bins_101=  [0.44581813010704685, 0.43780569896085864, 0.43520182455000866, 0.44293718326032905, 0.41386617932890196, 0.41596535112747013, 0.3956521118430547, 0.39054152244678675, 0.354870753558569, 0.3188588927695527, 0.26826408244095923, 0.17916292677145593, 0.1704334827904493, 0.09842328242514342]
pc_meanfl_116 =  [0.45101225921897936, 0.44849200936952516, 0.4464171007582426, 0.43123217793390944, 0.4292340081511267, 0.42331526821798654, 0.3959147968450534, 0.3807706021917322, 0.3589226759680417, 0.3137489228784535, 0.26620792900423546, 0.21536978402432916, 0.12241896736687927, 0.13432646683008537]
pc_meanfl_116_weights = [0.44099419551288144, 0.43015339091949384, 0.45708190374805135, 0.4361477654312914, 0.4348438184402572, 0.4114060410755568, 0.3858678331156826, 0.3778282276969489, 0.34468671578014665, 0.33011936848363993, 0.28613092188422384, 0.20924679923045292, 0.18952947382607133, 0.19294027540523068]
pc_meanfl_101_weights= [0.45745199167168626, 0.4382480604080391, 0.4480683063292928, 0.4295947714640205, 0.41242638022543654, 0.4115507919302912, 0.3956949147270523, 0.38302422279921855, 0.34422291861695387, 0.31307440549860177, 0.29469330571131697, 0.24356746614887964, 0.19453722412981203, 0.205546781094197]
pc_meanfl_101= [0.4390728903082816, 0.4451543169941766, 0.44738870146392623, 0.4243371242591752, 0.4384636143253775, 0.4108749044334048, 0.37796722637857705, 0.3625576815465098, 0.35623190220886825, 0.31666983245431696, 0.27916079546389755, 0.19826760168936566, 0.1786717935079427, 0.15204867258258392]


fig= plt.figure(figsize=(16, 12))
fig.subplots_adjust(top=0.95, left=0.17, right=0.9, bottom=0.19)

# Plot the lines with different colors
plt.plot(amount_of_data_points, pc_meanfl_116_weights, 'g.-', label="Mean FL, 116bp sequence, with sample weights model fit")
plt.plot(amount_of_data_points, pc_meanfl_116, 'b.-', label="Mean FL, 116bp sequence")
plt.plot(amount_of_data_points, pc_meanfl_101_weights, 'r.-', label="Mean FL, 101bp sequence, with sample weights model fit")
plt.plot(amount_of_data_points, pc_meanfl_101, 'c.-', label="Mean FL, 101bp sequence")
plt.plot(amount_of_data_points, pc_bins_116_weights, 'y.-', label="4 bins, 116bp sequence, with sample weights model fit")
plt.plot(amount_of_data_points, pc_bins_116, 'm.-', label="4 bins, 116bp sequence")
plt.plot(amount_of_data_points, pc_bins_101_weights, 'k.-', label="4 bins, 101bp sequence, with sample weights model fit")
plt.plot(amount_of_data_points, pc_bins_101, 'orange', label="4 bins, 101bp sequence")

plt.xticks(np.array(amount_of_data_points)+2000, x_labels, fontsize=18, rotation=45, ha='right')
plt.yticks(np.arange(0.1, 0.55, step=0.05), fontsize=20)
plt.xlabel("#Variants in the training set \n (Total read cut-off)", fontsize=24)
plt.ylabel("Pearson correlation", fontsize=24)

# Set legend with custom placement and font size
legend = plt.legend(loc='lower left', fontsize=18.5)
legend.get_frame().set_facecolor('white')

plt.savefig('figure_3b_correct_data.png', dpi=300)
plt.show()



